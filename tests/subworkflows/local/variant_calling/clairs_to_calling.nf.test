nextflow_workflow {

    name "Test Workflow CLAIRS_TO_CALLING"
    script "subworkflows/local/variant_calling/clairs_to_calling.nf"
    workflow "CLAIRS_TO_CALLING"

    test("Should run without failures") {

        when {
            params {
                // define parameters here. Example:
                adaptive = true
            }
            workflow {
                """
                // define inputs of the workflow here. Example:
                ch_bam = Channel.fromPath("${projectDir}/test_data/variant_calling/clairs_to/input/HCC1395_tumor_chr17_demo.bam")
                ch_bai = Channel.fromPath("${projectDir}/test_data/variant_calling/clairs_to/input/HCC1395_tumor_chr17_demo.bam.bai")
                ch_input0 = ch_bam
                    .combine(ch_bai)
                    .map { bam, bai ->
                        tuple(id:'HCC1395',bam,bai)}

                input[0] = ch_input0
                input[1] = Channel.fromPath("${projectDir}/test_data/variant_calling/clairs_to/ref/GRCh38_no_alt_chr17.{fa,fa.fai}")
                input[2] = Channel.of('chr17')
                input[3] = Channel.of('ont_r10_dorado_sup_5khz_ssrs')
                // Too big for github, to upload from ncbi 
                input[4] = Channel.fromPath("${projectDir}/test_data/variant_calling/snpEff/hg38_clinvar.vcf.{gz,gz.tbi}")
                """
            }
        }

        then {
            assert workflow.success
        }

    }

}
