/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file for running minimal tests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Defines input files and everything required to run a fast and simple pipeline test.

    Usage:
        nextflow run nf-core/oncoseq -profile test,<docker/singularity> --outdir <OUTDIR>
----------------------------------------------------------------------------------------
*/

// -----------------------------
// Process resource limits for test
// -----------------------------
process {
    errorStrategy = { task.attempt < 3 ? 'retry' : 'ignore' }
    maxRetries = 2
    resourceLimits = [
        cpus: 4,           // Max CPUs per process (test)
        memory: '15.GB',   // Max memory per process (test)
        time: '1.h'        // Max time per process (test)
    ]
    maxForks = 1           // Only one process at a time (test)
}

// -----------------------------
// Pipeline parameter overrides for test
// -----------------------------
params {
    config_profile_name        = 'Test profile' // Profile name for reporting
    config_profile_description = 'Minimal test dataset to check pipeline function' // Description
    outdir = 'test_out'                        // Output directory for test run
    // Input data
    input  = params.pipelines_testdata_base_path + 'reads/samplesheets/fastq_samplesheet.csv' // Test samplesheet
    model = 'fast'                             // Use fast model for test
    device = null                             // No specific device for test
    // TODO mpgi: make a better dataset for demultiplexing, possibly cfnda
    //demux = 'SQK-NBD114-24'                  // Uncomment to test demultiplexing
    //demux_samplesheet = params.pipelines_testdata_base_path + 'samplesheets/demux_samplesheet.csv'
    //ubam_samplesheet = params.pipelines_testdata_base_path + 'samplesheets/ubam_samplesheet.csv'
    publish_dir_mode = 'copy'                  // Copy outputs for test
    minqs = 8                                  // Lower quality threshold for test
    bed = params.pipelines_testdata_base_path + 'adaptive/2025-02-05-CHUSJ-Panel-20kb-LP.bed' // Test BED file
    max_cpus = 2                               // Limit CPUs for test
    max_memory = '15.GB'                       // Limit memory for test
    max_time = '1.h'                           // Limit time for test
    skip_basecalling = true                    // Skip basecalling for test (use FASTQ input)
    clin_database = "${projectDir}/refs/clinvar.vcf.{gz,gz.tbi}"                   // Use ClinVar for test
}

// -----------------------------
// Apptainer (Singularity) container options for test
// -----------------------------
apptainer {
    enabled=true                              // Enable Apptainer for test
    autoMounts=true                           // Automatically mount common host paths
    runOptions = '--writable-tmpfs'           // Use writable tmpfs for container
    cacheDir = "/tmp/apptainer/cache"         // Use /tmp for image cache in test
}
